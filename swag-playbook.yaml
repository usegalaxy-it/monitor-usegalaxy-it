---
- name: Setup config files and SWAG
  hosts: all
  become: true

  vars:
    bdir: "/etc/saber"
    sdir: "{{ bdir }}/swag"

  tasks:
    - name: Load Docker Compose file
      ansible.builtin.include_vars:
        file: ./compose.yaml
        name: compose_config

    - name: Ensure critical directories exist
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
        owner: ubuntu
        group: ubuntu
      loop:
        - "{{  bdir }}"
        - "{{  bdir }}/configs"
        - "{{ sdir }}"
        - "{{ sdir }}/www"
        - "{{ sdir }}/www/index"

    - name: Ensure directories exist with up-to-date contents
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ bdir }}/{{ item.dest | basename }}"
        owner: ubuntu
        group: ubuntu
        mode: "{{ item.mode }}"
        directory_mode: "0755"
        force: true
      loop:
        - { src: "./nginx/", dest: "{{ sdir }}/nginx", mode: "0644" }
        - { src: "./compose.yaml", dest: "{{ bdir }}/compose.yaml", mode: "0644" }
        - { src: "./Dockerfile", dest: "{{ bdir }}/Dockerfile", mode: "0644" }
        - { src: "./entrypoint.sh", dest: "{{ bdir }}/entrypoint.sh", mode: "0644" }
        - { src: "./workflow_test_eu.ga", dest: "{{ bdir }}/configs/workflow_test_eu.ga", mode: "0644" }
        - { src: "./workflow_test.ga", dest: "{{ bdir }}/configs/workflow_test.ga", mode: "0644" }
        - { src: "./example_settings.yaml", dest: "{{ bdir }}/configs/settings.yaml", mode: "0644" }
      loop_control:
        label: "{{ item.src }}"


    - name: Remove existing Docker image
      community.docker.docker_image:
        name: "{{ compose_config.services.saber.image }}"
        state: absent
        force_absent: true

    - name: Build Saber Docker image from Dockerfile
      community.docker.docker_image:
        name: "{{ compose_config.services.saber.image }}"
        build:
          path: "{{ bdir }}"
          dockerfile: Dockerfile
        source: build
        state: present

    - name: Deploy Ofelia cron container
      community.docker.docker_container:
        name: "{{ service_config.services.scheduler.container_name | 
          default('scheduler') }}"
        image: "{{ compose_config.services.scheduler.image }}"
        state: started
        env: "{{ compose_config.services.scheduler.environment | default({}) }}"
        ports: "{{ compose_config.services.scheduler.ports | default([]) }}"
        volumes: "{{ compose_config.services.scheduler.volumes | default([]) }}"
        command: "{{ compose_config.services.scheduler.command }}"
        restart_policy: "{{ compose_config.services.scheduler.restart }}"

    - name: Deploy SWAG container
      community.docker.docker_container:
        name: "{{ service_config.services.swag.container_name | default('saber_dash') }}"
        image: "{{ compose_config.services.swag.image }}"
        state: started
        capabilities: "{{ compose_config.services.swag.cap_add | default([]) }}"
        env: "{{ compose_config.services.swag.environment | default({}) }}"
        ports: "{{ compose_config.services.swag.ports | default([]) }}"
        volumes: "{{ compose_config.services.swag.volumes | default([]) }}"
        restart_policy: "{{ compose_config.services.swag.restart }}"

    - name: Deploy Saber container
      community.docker.docker_container:
        name: "{{ service_config.services.saber.container_name | default('saber_tester') }}"
        image: "{{ compose_config.services.saber.image }}"
        state: started
        env:
          SABER_PASSWORD: "{{ password }}"
        ports: "{{ compose_config.services.saber.ports | default([]) }}"
        volumes: "{{ compose_config.services.saber.volumes | default([]) }}"
        restart_policy: "{{ compose_config.services.saber.restart }}"
        labels:
          ofelia.enabled: "true"
          ofelia.job-exec.saber-daily.schedule: "0 2 * * *"
          ofelia.job-exec.saber-daily.command: "/usr/local/bin/entrypoint.sh run-once"

