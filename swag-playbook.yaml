---
- name: Setup config files and SWAG
  hosts: all
  become: true

  vars:
    bdir: "/etc/saber"
    sdir: "{{ bdir }}/swag"
    saber_docker: "{{ saber_docker | default(false) }}"

  tasks:
    - name: Load Docker Compose file
      ansible.builtin.include_vars:
        file: ./compose.yaml
        name: compose_config

    - name: Ensure critical directories exist
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
        owner: ubuntu
        group: ubuntu
      loop:
        - "{{  bdir }}"
        - "{{ sdir }}"
        - "{{ sdir }}/www"
        - "{{ sdir }}/www/index"

    - name: Ensure critical directories exist for saber container
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
        owner: ubuntu
        group: ubuntu
      loop:
        - "{{  bdir }}/logs"
        - "{{  bdir }}/configs"
      when: saber_docker


    - name: Ensure up-to-date contents
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: ubuntu
        group: ubuntu
        mode: "{{ item.mode }}"
        directory_mode: "0755"
        force: true
        remote_src: false
      loop:
        - { src: "./nginx/", dest: "{{ sdir }}/nginx", mode: "0644" }
      loop_control:
        label: "{{ item.src }}"
      become: yes

    - name: Ensure up-to-date contents for saber container
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: ubuntu
        group: ubuntu
        mode: "{{ item.mode }}"
        directory_mode: "0755"
        force: true
        remote_src: false
      loop:
        - { src: "./compose.yaml", dest: "{{ bdir }}/compose.yaml", mode: "0644" }
        - { src: "./Dockerfile", dest: "{{ bdir }}/Dockerfile", mode: "0644" }
        - { src: "./entrypoint.sh", dest: "{{ bdir }}/entrypoint.sh", mode: "0644" }
        - { src: "./workflow_test_eu.ga", dest: "{{ bdir }}/configs/workflow_test_eu.ga", mode: "0644" }
        - { src: "./workflow_test.ga", dest: "{{ bdir }}/configs/workflow_test.ga", mode: "0644" }
        - { src: "./saber_monitor_settings.yaml", dest: "{{ bdir }}/configs/settings.yaml", mode: "0644" }
      loop_control:
        label: "{{ item.src }}"
      become: yes
      when: saber_docker


    - name: Remove existing Docker image
      community.docker.docker_image:
        name: "{{ compose_config.services.saber.image }}"
        state: absent
        force_absent: true

    - name: Build Saber Docker image from Dockerfile
      community.docker.docker_image:
        name: "{{ compose_config.services.saber.image }}"
        build:
          path: "{{ bdir }}"
          dockerfile: Dockerfile
        source: build
        state: present
      when: saber_docker

    - name: Deploy SWAG container
      community.docker.docker_container:
        name: "{{ service_config.services.swag.container_name | default('saber_dash') }}"
        image: "{{ compose_config.services.swag.image }}"
        state: started
        capabilities: "{{ compose_config.services.swag.cap_add | default([]) }}"
        env: "{{ compose_config.services.swag.environment | default({}) }}"
        ports: "{{ compose_config.services.swag.ports | default([]) }}"
        volumes: "{{ compose_config.services.swag.volumes | default([]) }}"
        restart_policy: "{{ compose_config.services.swag.restart }}"

    - name: Deploy Saber container
      community.docker.docker_container:
        name: "{{ service_config.services.saber.container_name | default('saber_tester') }}"
        image: "{{ compose_config.services.saber.image }}"
        state: "{{ 'started' if saber_docker else 'absent' }}"
        env:
          SABER_PASSWORD: "{{ password }}"
          TZ: "Europe/Rome"
        ports: "{{ compose_config.services.saber.ports | default([]) }}"
        volumes: "{{ compose_config.services.saber.volumes | default([]) }}"
        restart_policy: "{{ compose_config.services.saber.restart }}"

    - name: Add cron to run SABER daily
      cron:
        name: "Run {{ service_config.services.saber.container_name | default('saber_tester') }} daily"
        state: "{{ 'present' if saber_docker else 'absent' }}"
        user: root
        minute: "*"
        hour: "23"
        job: "docker exec {{ service_config.services.saber.container_name | default('saber_tester') }} /usr/local/bin/entrypoint.sh run-once > /var/log/cron_saber.log 2>&1"
